@model  Model.DTO.DTO_Ad.DTO_Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Chỉnh sửa sản phẩm</h2>


@using (Html.BeginForm("Edit", "Products_Add", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id_SanPham)

        <div class="form-group">
            Tên sản phẩm
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Giá sản phẩm
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Chi tiết sản phẩm
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Hỉnh ảnh sản phẩm
            <div class="col-md-10">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                <img src="@Url.Content(Model.Photo)" style="height:200px; width:200px; margin:10px; " id="PreviewImage" />
                <input type="file" name="ImageUpload" onchange="ShowImagePreview( document.getElementById('PreviewImage')" />
                @*<input type="file" id="fileUpload" name=" fileUpload" style="display:none" />
                    <input type="button" id="btnUpload" value="..." class="btn btn-success" />*@
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Item.Id_SanPham, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Item.Id_SanPham, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Item.Id_SanPham, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Id_Item, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Item, new { htmlAttributes = new { @class = "form-control " } })
                    @Html.ValidationMessageFor(model => model.Id_Item, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở về", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function ShowImagePreview(imageUploader, PreviewImage) {
        if (imageUploader.flles && imageUploader.flles[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $(PreviewImage).attr('src', e.target.result);
            }
            reader.readAsDataURL(imageUploader.flles[0]);
        };
    }
</script>
